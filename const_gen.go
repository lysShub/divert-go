// Code generated by "stringer -output const_gen.go -type=Proto"; DO NOT EDIT.

package divert

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[HOPOPTS-0]
	_ = x[ICMP-1]
	_ = x[TCP-6]
	_ = x[UDP-17]
	_ = x[ROUTING-43]
	_ = x[FRAGMENT-44]
	_ = x[AH-51]
	_ = x[ICMPV6-58]
	_ = x[NONE-59]
	_ = x[DSTOPTS-60]
}

const (
	_Proto_name_0 = "HOPOPTSICMP"
	_Proto_name_1 = "TCP"
	_Proto_name_2 = "UDP"
	_Proto_name_3 = "ROUTINGFRAGMENT"
	_Proto_name_4 = "AH"
	_Proto_name_5 = "ICMPV6NONEDSTOPTS"
)

var (
	_Proto_index_0 = [...]uint8{0, 7, 11}
	_Proto_index_3 = [...]uint8{0, 7, 15}
	_Proto_index_5 = [...]uint8{0, 6, 10, 17}
)

func (i Proto) String() string {
	switch {
	case i <= 1:
		return _Proto_name_0[_Proto_index_0[i]:_Proto_index_0[i+1]]
	case i == 6:
		return _Proto_name_1
	case i == 17:
		return _Proto_name_2
	case 43 <= i && i <= 44:
		i -= 43
		return _Proto_name_3[_Proto_index_3[i]:_Proto_index_3[i+1]]
	case i == 51:
		return _Proto_name_4
	case 58 <= i && i <= 60:
		i -= 58
		return _Proto_name_5[_Proto_index_5[i]:_Proto_index_5[i+1]]
	default:
		return "Proto(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
